package protopkg

import (
	"flag"

	"github.com/bazelbuild/bazel-gazelle/config"
	"github.com/bazelbuild/bazel-gazelle/rule"
)

// The following methods are implemented to satisfy the
// https://pkg.go.dev/github.com/bazelbuild/bazel-gazelle/resolve?tab=doc#Resolver
// interface, but are otherwise unused.
func (*protoPkgLang) RegisterFlags(fs *flag.FlagSet, cmd string, c *config.Config) {}

func (*protoPkgLang) CheckFlags(fs *flag.FlagSet, c *config.Config) error { return nil }

func (*protoPkgLang) KnownDirectives() []string { return nil }

// Configure implements config.Configurer
func (pl *protoPkgLang) Configure(c *config.Config, rel string, f *rule.File) {}

// Kinds returns a map of maps rule names (kinds) and information on how to
// match and merge attributes that may be found in rules of those kinds. All
// kinds of rules generated for this language may be found here.
func (*protoPkgLang) Kinds() map[string]rule.KindInfo {
	return nil
}

// Loads returns .bzl files and symbols they define. Every rule generated by
// GenerateRules, now or in the past, should be loadable from one of these
// files.
func (pl *protoPkgLang) Loads() []rule.LoadInfo { return nil }
